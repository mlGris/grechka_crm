"""table_initial

Revision ID: 0c0650d38944
Revises: 
Create Date: 2024-12-23 21:37:07.257865

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0c0650d38944'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dic_users_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('projects',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('db_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('db_name')
    )
    op.create_index('inx_proj_name', 'projects', ['name'], unique=False)
    op.create_table('projects_history',
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('db_name', sa.String(), nullable=False),
    sa.Column('vers_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("'01-01-9999'"), nullable=False),
    sa.Column('updated_by_id', sa.String(), server_default=sa.text("'sys_user'"), nullable=False),
    sa.PrimaryKeyConstraint('vers_id')
    )
    op.create_index(op.f('ix_projects_history_updated_at'), 'projects_history', ['updated_at'], unique=False)
    op.create_table('subscriptions_history',
    sa.Column('subscription_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('vers_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("'01-01-9999'"), nullable=False),
    sa.Column('updated_by_id', sa.String(), server_default=sa.text("'sys_user'"), nullable=False),
    sa.PrimaryKeyConstraint('vers_id')
    )
    op.create_index(op.f('ix_subscriptions_history_updated_at'), 'subscriptions_history', ['updated_at'], unique=False)
    op.create_table('us_to_pr_history',
    sa.Column('relation_id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('dic_user_role_id', sa.Integer(), nullable=True),
    sa.Column('vers_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("'01-01-9999'"), nullable=False),
    sa.Column('updated_by_id', sa.String(), server_default=sa.text("'sys_user'"), nullable=False),
    sa.PrimaryKeyConstraint('vers_id')
    )
    op.create_index(op.f('ix_us_to_pr_history_updated_at'), 'us_to_pr_history', ['updated_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mid_name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_num', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('login')
    )
    op.create_index('inx_mid_name', 'users', ['mid_name'], unique=False)
    op.create_index('inx_surname', 'users', ['surname'], unique=False)
    op.create_index('inx_user_name', 'users', ['name'], unique=False)
    op.create_table('users_history',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mid_name', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone_num', sa.String(), nullable=True),
    sa.Column('vers_id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("'01-01-9999'"), nullable=False),
    sa.Column('updated_by_id', sa.String(), server_default=sa.text("'sys_user'"), nullable=False),
    sa.PrimaryKeyConstraint('vers_id')
    )
    op.create_index(op.f('ix_users_history_updated_at'), 'users_history', ['updated_at'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users_to_projects',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('project_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('dic_user_role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['dic_user_role_id'], ['dic_users_roles.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_to_projects')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_users_history_updated_at'), table_name='users_history')
    op.drop_table('users_history')
    op.drop_index('inx_user_name', table_name='users')
    op.drop_index('inx_surname', table_name='users')
    op.drop_index('inx_mid_name', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_us_to_pr_history_updated_at'), table_name='us_to_pr_history')
    op.drop_table('us_to_pr_history')
    op.drop_index(op.f('ix_subscriptions_history_updated_at'), table_name='subscriptions_history')
    op.drop_table('subscriptions_history')
    op.drop_index(op.f('ix_projects_history_updated_at'), table_name='projects_history')
    op.drop_table('projects_history')
    op.drop_index('inx_proj_name', table_name='projects')
    op.drop_table('projects')
    op.drop_table('dic_users_roles')
    # ### end Alembic commands ###
